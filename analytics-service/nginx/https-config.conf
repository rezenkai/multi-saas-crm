# HTTPS Configuration for Production
# This configuration provides SSL/TLS termination at the load balancer

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_https:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=ml_https:10m rate=5r/s;

# Upstream configurations
upstream analytics_backend_https {
    least_conn;
    server analytics-service:8000 weight=1 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream ml_ai_backend_https {
    least_conn;
    server ml-ai-service:8007 weight=1 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

upstream grafana_backend_https {
    server grafana-analytics:3000 weight=1 max_fails=2 fail_timeout=10s;
}

upstream superset_backend_https {
    server superset-analytics:8088 weight=1 max_fails=2 fail_timeout=10s;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name _;
    
    # Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }
    
    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS Configuration
server {
    listen 443 ssl http2;
    server_name _;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; frame-ancestors 'none';" always;
    
    # Remove server signature
    server_tokens off;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Main API routing with load balancing
    location /api/ {
        limit_req zone=api_https burst=20 nodelay;
        
        # Security headers for API
        add_header X-API-Version "1.0" always;
        add_header Access-Control-Allow-Origin "$http_origin" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Tenant-ID" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Max-Age 86400;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
        
        proxy_pass http://analytics_backend_https;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Connection pooling
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Health check
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries 2;
    }
    
    # ML/AI API routing with extended timeouts
    location /ml/ {
        limit_req zone=ml_https burst=10 nodelay;
        
        rewrite ^/ml/(.*)$ /api/ml/$1 break;
        proxy_pass http://ml_ai_backend_https;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Extended timeouts for ML operations
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Larger body size for ML uploads
        client_max_body_size 100M;
        
        # Health check
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries 2;
    }
    
    # Grafana with WebSocket support
    location /grafana/ {
        proxy_pass http://grafana_backend_https/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support for Grafana live
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Grafana specific headers
        proxy_set_header X-Forwarded-Host $host;
        proxy_hide_header X-Frame-Options;
    }
    
    # Superset dashboard
    location /superset/ {
        proxy_pass http://superset_backend_https/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Increase timeout for complex queries
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        
        # Large body size for data uploads
        client_max_body_size 100M;
    }
    
    # Health check endpoint (public)
    location /health {
        access_log off;
        return 200 '{"status":"healthy","protocol":"https","load_balancer":"nginx","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json always;
    }
    
    # Status endpoint (restricted)
    location /status {
        access_log off;
        allow 127.0.0.1;
        allow 172.16.0.0/12;  # Docker networks
        allow 10.0.0.0/8;     # Private networks
        deny all;
        
        return 200 '{"nginx_status":"active","ssl_enabled":true,"upstreams":{"analytics":"$upstream_addr","ml_ai":"$upstream_addr"}}';
        add_header Content-Type application/json always;
    }
    
    # Root endpoint
    location = / {
        return 200 '{"message":"CRM Analytics Stack","protocol":"https","services":{"analytics":"/api/","grafana":"/grafana/","superset":"/superset/","ml-ai":"/ml/","health":"/health"}}';
        add_header Content-Type application/json always;
    }
    
    # Robots.txt
    location = /robots.txt {
        return 200 "User-agent: *\nDisallow: /\n";
        add_header Content-Type text/plain always;
    }
    
    # Favicon
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        return 204;
    }
    
    # Security - Block common attack patterns
    location ~* \.(aspx|php|jsp|cgi)$ {
        return 444;
    }
    
    location ~* /(wp-admin|wp-content|admin|phpmyadmin) {
        return 444;
    }
    
    # Error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        return 502 '{"error":"Service Temporarily Unavailable","message":"Backend services are currently unavailable. Please try again later.","protocol":"https"}';
        add_header Content-Type application/json always;
    }
    
    error_page 404 /404.html;
    location = /404.html {
        return 404 '{"error":"Not Found","message":"The requested resource was not found.","protocol":"https"}';
        add_header Content-Type application/json always;
    }
}

# WebSocket upgrade mapping
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Logging configuration
log_format https_detailed '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         'rt=$request_time uct="$upstream_connect_time" '
                         'uht="$upstream_header_time" urt="$upstream_response_time" '
                         'ssl_protocol=$ssl_protocol ssl_cipher=$ssl_cipher '
                         'upstream="$upstream_addr" cache="$upstream_cache_status"';

access_log /var/log/nginx/https_access.log https_detailed;
error_log /var/log/nginx/https_error.log warn;