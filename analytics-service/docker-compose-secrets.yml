# Docker Compose with Docker Secrets Support
# PRODUCTION-READY: Uses Docker secrets instead of environment variables
# Usage: docker-compose -f docker-compose-secrets.yml up -d

version: '3.8'

services:
  # Analytics Service with secrets
  analytics-service:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: crm-analytics-secure
    ports:
      - "8005:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
      # Database connection using secrets
      - DATABASE_HOST=postgres-analytics-secure
      - DATABASE_PORT=5432
      - DATABASE_NAME=salesforce_clone
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD_FILE=/run/secrets/postgres_password
      # Redis with authentication
      - REDIS_HOST=redis-analytics-secure
      - REDIS_PORT=6379
      - REDIS_PASSWORD_FILE=/run/secrets/redis_password
      # ClickHouse with authentication
      - CLICKHOUSE_HOST=clickhouse-analytics-secure
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_DATABASE=crm_analytics
      - CLICKHOUSE_USER=analytics
      - CLICKHOUSE_PASSWORD_FILE=/run/secrets/clickhouse_password
      # Security tokens
      - JWT_SECRET_FILE=/run/secrets/jwt_secret
      - SESSION_SECRET_FILE=/run/secrets/session_secret
    secrets:
      - postgres_password
      - redis_password
      - clickhouse_password
      - jwt_secret
      - session_secret
    networks:
      - analytics-network
    volumes:
      - analytics-logs:/app/logs
    depends_on:
      - postgres-analytics-secure
      - redis-analytics-secure
      - clickhouse-analytics-secure
    restart: unless-stopped

  # ML/AI Service with secure API keys
  ml-ai-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    container_name: crm-ml-ai-secure
    ports:
      - "8007:8007"
    environment:
      - CLICKHOUSE_HOST=clickhouse-analytics-secure
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_USER=analytics
      - CLICKHOUSE_PASSWORD_FILE=/run/secrets/clickhouse_password
      - CLICKHOUSE_DATABASE=crm_analytics
      # AI API keys stored as secrets
      - OPENAI_API_KEY_FILE=/run/secrets/openai_api_key
      - AZURE_API_KEY_FILE=/run/secrets/azure_api_key
    secrets:
      - clickhouse_password
      - openai_api_key
      - azure_api_key
    networks:
      - analytics-network
    depends_on:
      - clickhouse-analytics-secure
    restart: unless-stopped

  # PostgreSQL with secure password
  postgres-analytics-secure:
    image: postgres:13
    container_name: analytics-postgres-secure
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=salesforce_clone
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    secrets:
      - postgres_password
    volumes:
      - postgres-analytics-data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    networks:
      - analytics-network
    restart: unless-stopped

  # ClickHouse with secure authentication
  clickhouse-analytics-secure:
    image: clickhouse/clickhouse-server:23.8-alpine
    container_name: crm-clickhouse-secure
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      - CLICKHOUSE_DB=crm_analytics
      - CLICKHOUSE_USER=analytics
      - CLICKHOUSE_PASSWORD_FILE=/run/secrets/clickhouse_password
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    secrets:
      - clickhouse_password
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - clickhouse-logs:/var/log/clickhouse-server
    networks:
      - analytics-network
    restart: unless-stopped

  # Redis with password authentication
  redis-analytics-secure:
    image: redis:7-alpine
    container_name: crm-redis-analytics-secure
    ports:
      - "6380:6379"
    command: >
      sh -c "
        export REDIS_PASSWORD=$$(cat /run/secrets/redis_password) &&
        exec redis-server --requirepass $$REDIS_PASSWORD --appendonly yes
      "
    secrets:
      - redis_password
    volumes:
      - redis-data:/data
    networks:
      - analytics-network
    restart: unless-stopped

  # Grafana with secure admin password
  grafana-analytics-secure:
    image: grafana/grafana-oss:latest
    container_name: crm-grafana-secure
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/grafana_admin_password
      - GF_INSTALL_PLUGINS=clickhouse-datasource
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=http://localhost:3001/
    secrets:
      - grafana_admin_password
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - analytics-network
    restart: unless-stopped

  # Apache Superset with secret key
  superset-analytics-secure:
    image: apache/superset:latest
    container_name: crm-superset-secure
    ports:
      - "8006:8088"
    environment:
      - SUPERSET_SECRET_KEY_FILE=/run/secrets/superset_secret_key
    secrets:
      - superset_secret_key
    volumes:
      - superset-data:/app/superset_home
    networks:
      - analytics-network
    restart: unless-stopped

# Docker secrets definition (external - created separately)
secrets:
  postgres_password:
    external: true
  redis_password:
    external: true
  clickhouse_password:
    external: true
  jwt_secret:
    external: true
  session_secret:
    external: true
  grafana_admin_password:
    external: true
  superset_secret_key:
    external: true
  openai_api_key:
    external: true
  azure_api_key:
    external: true

networks:
  analytics-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres-analytics-data:
  clickhouse-data:
  clickhouse-logs:
  redis-data:
  grafana-data:
  superset-data:
  backup-data:
  backup-logs:
  analytics-logs:
