#!/bin/bash

# ะกะบัะธะฟั ะดะปั ะทะฐะฟััะบะฐ Salesforce Clone ะฒ ัะตะถะธะผะต ัะฐะทัะฐะฑะพัะบะธ

echo "๐ ะะฐะฟััะบ Salesforce Clone..."

# ะัะพะฒะตัะบะฐ ะฝะฐะปะธัะธั Docker
if ! command -v docker &> /dev/null; then
    echo "โ Docker ะฝะต ัััะฐะฝะพะฒะปะตะฝ. ะะพะถะฐะปัะนััะฐ, ัััะฐะฝะพะฒะธัะต Docker."
    exit 1
fi

# ะัะพะฒะตัะบะฐ ะฝะฐะปะธัะธั Docker Compose
if ! command -v docker-compose &> /dev/null; then
    echo "โ Docker Compose ะฝะต ัััะฐะฝะพะฒะปะตะฝ. ะะพะถะฐะปัะนััะฐ, ัััะฐะฝะพะฒะธัะต Docker Compose."
    exit 1
fi

echo "๐ฆ ะกะพะทะดะฐะฝะธะต ะฝะตะพะฑัะพะดะธะผัั ะดะธัะตะบัะพัะธะน..."
mkdir -p infrastructure/monitoring/grafana/dashboards
mkdir -p infrastructure/monitoring/grafana/datasources

echo "๐ง ะกะพะทะดะฐะฝะธะต .env ัะฐะนะปะฐ..."
if [ ! -f .env ]; then
    cat > .env << EOF
# Salesforce Clone Environment Variables
DEBUG=true
DATABASE_URL=postgresql://postgres:password@localhost:5432/salesforce_clone
REDIS_URL=redis://localhost:6379/0
ELASTICSEARCH_URL=http://localhost:9200
KAFKA_BOOTSTRAP_SERVERS=localhost:9092

# JWT Settings
SECRET_KEY=your-secret-key-change-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# CORS
BACKEND_CORS_ORIGINS=["http://localhost:3000","http://localhost:8080"]

# Multi-tenancy
DEFAULT_TENANT_ID=default
TENANT_HEADER=X-Tenant-ID

# Logging
LOG_LEVEL=INFO
LOG_FORMAT=json

# Monitoring
ENABLE_METRICS=true
METRICS_PORT=9090
EOF
    echo "โ .env ัะฐะนะป ัะพะทะดะฐะฝ"
else
    echo "โ .env ัะฐะนะป ัะถะต ัััะตััะฒัะตั"
fi

echo "๐ณ ะะฐะฟััะบ Docker ะบะพะฝัะตะนะฝะตัะพะฒ..."
docker-compose up -d

echo "โณ ะะถะธะดะฐะฝะธะต ะทะฐะฟััะบะฐ ัะตัะฒะธัะพะฒ..."
sleep 30

echo "๐ ะัะพะฒะตัะบะฐ ััะฐัััะฐ ัะตัะฒะธัะพะฒ..."

# ะัะพะฒะตัะบะฐ PostgreSQL
if docker-compose exec -T postgres pg_isready -U postgres > /dev/null 2>&1; then
    echo "โ PostgreSQL ะทะฐะฟััะตะฝ"
else
    echo "โ PostgreSQL ะฝะต ะทะฐะฟััะตะฝ"
fi

# ะัะพะฒะตัะบะฐ Redis
if docker-compose exec -T redis redis-cli ping > /dev/null 2>&1; then
    echo "โ Redis ะทะฐะฟััะตะฝ"
else
    echo "โ Redis ะฝะต ะทะฐะฟััะตะฝ"
fi

# ะัะพะฒะตัะบะฐ Elasticsearch
if curl -s http://localhost:9200/_cluster/health > /dev/null 2>&1; then
    echo "โ Elasticsearch ะทะฐะฟััะตะฝ"
else
    echo "โ Elasticsearch ะฝะต ะทะฐะฟััะตะฝ"
fi

# ะัะพะฒะตัะบะฐ Backend
if curl -s http://localhost:8000/health > /dev/null 2>&1; then
    echo "โ Backend API ะทะฐะฟััะตะฝ"
else
    echo "โ Backend API ะฝะต ะทะฐะฟััะตะฝ"
fi

echo ""
echo "๐ Salesforce Clone ะทะฐะฟััะตะฝ!"
echo ""
echo "๐ ะะพัััะฟะฝัะต ัะตัะฒะธัั:"
echo "   ๐ Frontend: http://localhost:3000"
echo "   ๐ง Backend API: http://localhost:8000"
echo "   ๐ API Docs: http://localhost:8000/docs"
echo "   ๐ Grafana: http://localhost:3001 (admin/admin)"
echo "   ๐ Prometheus: http://localhost:9090"
echo "   ๐๏ธ  PostgreSQL: localhost:5432"
echo "   ๐ด Redis: localhost:6379"
echo "   ๐ Elasticsearch: http://localhost:9200"
echo ""
echo "๐ ะะตัะพะปัะฝัะต ััะตัะฝัะต ะดะฐะฝะฝัะต:"
echo "   Email: admin@salesforce-clone.com"
echo "   Password: admin123"
echo ""
echo "๐ ะะปั ะพััะฐะฝะพะฒะบะธ ะธัะฟะพะปัะทัะนัะต: docker-compose down"
echo "๐ ะะปั ะฟัะพัะผะพััะฐ ะปะพะณะพะฒ ะธัะฟะพะปัะทัะนัะต: docker-compose logs -f" 