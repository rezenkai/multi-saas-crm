services:
  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: multisaas
      POSTGRES_USER: multisaas
      POSTGRES_PASSWORD: multisaas_password
    ports:
      - "5432:5432"
    networks:
      - multisaas-network

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - multisaas-network

  # API Gateway (simple version)
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile.simple
    depends_on:
      - redis
      - crm-backend
    environment:
      - NODE_ENV=development
      - PORT=3001
      - JWT_SECRET=test-secret-key
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AUTH_SERVICE_URL=http://crm-backend:8000
      - USERS_SERVICE_URL=http://crm-backend:8000
      - CONTACTS_SERVICE_URL=http://crm-backend:8000
      - COMPANIES_SERVICE_URL=http://crm-backend:8000
      - OPPORTUNITIES_SERVICE_URL=http://crm-backend:8000
      - DASHBOARD_SERVICE_URL=http://crm-backend:8000
      - ERP_SERVICE_URL=http://erp-service:8006
      - MARKETING_SERVICE_URL=http://marketing-service:8007
      - PLUGINS_SERVICE_URL=http://plugins-service:8008
      - CUSTOM_FIELDS_SERVICE_URL=http://custom-fields-service:8009
      - OAUTH2_SERVICE_URL=http://oauth2-service:8010
      - WORKFLOW_ENGINE_URL=http://workflow-engine:8011
    ports:
      - "3001:3001"
    networks:
      - multisaas-network

  # Plugin System (simple version)
  plugins-service:
    build:
      context: ./plugins-system
      dockerfile: Dockerfile.simple
    depends_on:
      - postgres
      - redis
    environment:
      - PORT=8008
    ports:
      - "8008:8008"
    networks:
      - multisaas-network

  # ERP Service (placeholder)
  erp-service:
    build:
      context: ./erp-service
      dockerfile: Dockerfile
    environment:
      - SERVICE_PORT=8006
    ports:
      - "8006:8006"
    networks:
      - multisaas-network

  # Marketing Service (placeholder)
  marketing-service:
    build:
      context: ./marketing-service
      dockerfile: Dockerfile
    environment:
      - SERVICE_PORT=8007
    ports:
      - "8007:8007"
    networks:
      - multisaas-network

  # Custom Fields Service
  custom-fields-service:
    build:
      context: ./custom-fields-service
      dockerfile: Dockerfile.simple
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=development
      - PORT=8009
      - DATABASE_URL=postgresql://multisaas:multisaas_password@postgres:5432/multisaas
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=test-secret-key
      - LOG_LEVEL=INFO
    ports:
      - "8009:8009"
    networks:
      - multisaas-network

  # OAuth2 Service
  oauth2-service:
    build:
      context: ./oauth2-service
      dockerfile: Dockerfile.simple
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=development
      - PORT=8010
      - DATABASE_URL=postgresql://multisaas:multisaas_password@postgres:5432/multisaas
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=test-secret-key
      - OAUTH2_ISSUER=http://localhost:8010
      - SESSION_SECRET=oauth2-session-secret-change-in-production
      - LOG_LEVEL=INFO
      # Google OAuth (optional - configure with real credentials)
      - GOOGLE_CLIENT_ID=
      - GOOGLE_CLIENT_SECRET=
      - GOOGLE_CALLBACK_URL=http://localhost:8010/auth/google/callback
      # GitHub OAuth (optional - configure with real credentials)
      - GITHUB_CLIENT_ID=
      - GITHUB_CLIENT_SECRET=
      - GITHUB_CALLBACK_URL=http://localhost:8010/auth/github/callback
    ports:
      - "8010:8010"
    networks:
      - multisaas-network

  # Workflow Engine Service
  workflow-engine:
    build:
      context: ./workflow-engine
      dockerfile: Dockerfile.simple
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=development
      - PORT=8011
      - DATABASE_URL=postgresql://multisaas:multisaas_password@postgres:5432/multisaas
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=test-secret-key
      - LOG_LEVEL=INFO
      - ENABLE_WEBHOOKS=true
      - ENABLE_SCHEDULING=true
      - ENABLE_EXTERNAL_APIS=true
      - MAX_CONCURRENT_EXECUTIONS=50
      - MAX_STEPS_PER_WORKFLOW=30
      # External Service URLs
      - CRM_BACKEND_URL=http://crm-backend:8000
      - ERP_SERVICE_URL=http://erp-service:8006
      - MARKETING_SERVICE_URL=http://marketing-service:8007
      - PLUGINS_SERVICE_URL=http://plugins-service:8008
      - CUSTOM_FIELDS_SERVICE_URL=http://custom-fields-service:8009
      - OAUTH2_SERVICE_URL=http://oauth2-service:8010
      - API_GATEWAY_URL=http://api-gateway:3001
    ports:
      - "8011:8011"
    networks:
      - multisaas-network

  # Existing CRM Backend (FastAPI)
  crm-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgresql://multisaas:multisaas_password@postgres:5432/multisaas
      - REDIS_URL=redis://redis:6379
      - DEBUG=true
      - PROJECT_NAME=CRM Backend
      - VERSION=1.0.0
      - API_V1_STR=/api/v1
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    networks:
      - multisaas-network
    volumes:
      - ./backend/static:/app/static

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - api-gateway
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NODE_ENV=development
    ports:
      - "3000:3000"
    networks:
      - multisaas-network

networks:
  multisaas-network:
    driver: bridge