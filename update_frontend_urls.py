#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è URL –≤ frontend —Ñ–∞–π–ª–∞—Ö —Å –ø—Ä—è–º–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ CRM backend
–Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ API Gateway
"""

import os
import re
import glob

def update_urls_in_file(file_path):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç URL –≤ —Ñ–∞–π–ª–µ"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ occurrence of localhost:8000 –Ω–∞ localhost:3001
        updated_content = content.replace('http://localhost:8000', 'http://localhost:3001')
        
        # –ï—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—ã–ª–∏ —Å–¥–µ–ª–∞–Ω—ã
        if content != updated_content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(updated_content)
            print(f"‚úÖ Updated: {file_path}")
            return True
        else:
            print(f"üìù No changes needed: {file_path}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error updating {file_path}: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    frontend_dir = "frontend/src"
    
    if not os.path.exists(frontend_dir):
        print(f"‚ùå Directory {frontend_dir} not found!")
        return
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ .tsx –∏ .ts —Ñ–∞–π–ª—ã
    patterns = [
        f"{frontend_dir}/**/*.tsx",
        f"{frontend_dir}/**/*.ts"
    ]
    
    files_updated = 0
    total_files = 0
    
    print("üîÑ Updating frontend API URLs from localhost:8000 to localhost:3001...")
    print("-" * 60)
    
    for pattern in patterns:
        for file_path in glob.glob(pattern, recursive=True):
            total_files += 1
            if update_urls_in_file(file_path):
                files_updated += 1
    
    print("-" * 60)
    print(f"‚úÖ Summary: Updated {files_updated} out of {total_files} files")
    print("üéØ Frontend is now configured to use API Gateway at localhost:3001")

if __name__ == "__main__":
    main()