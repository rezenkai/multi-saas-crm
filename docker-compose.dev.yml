version: '3.8'

services:
  # PostgreSQL база данных (оптимизированная)
  postgres:
    image: postgres:15-alpine
    container_name: salesforce_postgres_dev
    environment:
      POSTGRES_DB: salesforce_clone
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      # Оптимизация памяти
      POSTGRES_SHARED_PRELOAD_LIBRARIES: "pg_stat_statements"
      POSTGRES_MAX_CONNECTIONS: 50
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - salesforce_network_dev
    # Ограничение памяти
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis для кеширования (оптимизированный)
  redis:
    image: redis:7-alpine
    container_name: salesforce_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - salesforce_network_dev
    # Ограничение памяти
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    command: redis-server --maxmemory 100mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (оптимизированный)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: salesforce_backend_dev
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/salesforce_clone
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
      - LOG_LEVEL=DEBUG
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - salesforce_network_dev
    # Ограничение памяти
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --workers 1

  # Frontend (Next.js) - опционально
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: salesforce_frontend_dev
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - salesforce_network_dev
    # Ограничение памяти
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    command: npm run dev

volumes:
  postgres_data_dev:
  redis_data_dev:

networks:
  salesforce_network_dev:
    driver: bridge 