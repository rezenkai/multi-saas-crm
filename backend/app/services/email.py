"""
Email service –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
"""
import smtplib
import logging
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from typing import List, Optional
from pathlib import Path
import aiosmtplib
import asyncio

from ..core.config import settings

logger = logging.getLogger(__name__)


class EmailService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    
    @staticmethod
    async def send_email(
        to_emails: List[str],
        subject: str,
        body: str,
        html_body: Optional[str] = None,
        from_email: Optional[str] = None
    ) -> bool:
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ email
        
        Args:
            to_emails: –°–ø–∏—Å–æ–∫ email –∞–¥—Ä–µ—Å–æ–≤ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
            subject: –¢–µ–º–∞ –ø–∏—Å—å–º–∞
            body: –¢–µ–∫—Å—Ç –ø–∏—Å—å–º–∞
            html_body: HTML –≤–µ—Ä—Å–∏—è –ø–∏—Å—å–º–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            from_email: Email –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫)
        
        Returns:
            bool: True –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞
        """
        if not settings.SMTP_HOST or not settings.SMTP_USER:
            logger.warning("SMTP not configured, skipping email send")
            return False
        
        try:
            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = MIMEMultipart("alternative")
            message["Subject"] = subject
            message["From"] = from_email or settings.SMTP_USER
            message["To"] = ", ".join(to_emails)
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –≤–µ—Ä—Å–∏—é
            text_part = MIMEText(body, "plain", "utf-8")
            message.attach(text_part)
            
            # –î–æ–±–∞–≤–ª—è–µ–º HTML –≤–µ—Ä—Å–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å
            if html_body:
                html_part = MIMEText(html_body, "html", "utf-8")
                message.attach(html_part)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ aiosmtplib
            await aiosmtplib.send(
                message,
                hostname=settings.SMTP_HOST,
                port=settings.SMTP_PORT,
                start_tls=settings.SMTP_TLS,
                username=settings.SMTP_USER,
                password=settings.SMTP_PASSWORD,
            )
            
            logger.info(f"Email sent successfully to {to_emails}")
            return True
            
        except Exception as e:
            logger.error(f"Failed to send email: {e}")
            return False
    
    @staticmethod
    async def send_verification_email(email: str, token: str, user_name: str) -> bool:
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        """
        verification_url = f"{settings.FRONTEND_URL}/verify-email?token={token}"
        
        subject = "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email –∞–¥—Ä–µ—Å–∞"
        
        text_body = f"""
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_name}!

–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à email –∞–¥—Ä–µ—Å, –ø–µ—Ä–µ–π–¥—è –ø–æ —Å—Å—ã–ª–∫–µ:
{verification_url}

–ï—Å–ª–∏ –≤—ã –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Salesforce Clone
        """
        
        html_body = f"""
        <html>
        <body>
            <div style="max-width: 600px; margin: 0 auto; font-family: Arial, sans-serif;">
                <h2 style="color: #333;">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email –∞–¥—Ä–µ—Å–∞</h2>
                <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <strong>{user_name}</strong>!</p>
                <p>–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à email –∞–¥—Ä–µ—Å:</p>
                <div style="text-align: center; margin: 30px 0;">
                    <a href="{verification_url}" 
                       style="background-color: #4F46E5; color: white; padding: 12px 24px; 
                              text-decoration: none; border-radius: 6px; display: inline-block;">
                        –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å email
                    </a>
                </div>
                <p style="color: #666; font-size: 14px;">
                    –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:<br>
                    <a href="{verification_url}">{verification_url}</a>
                </p>
                <hr style="margin: 30px 0; border: none; border-top: 1px solid #eee;">
                <p style="color: #999; font-size: 12px;">
                    –ï—Å–ª–∏ –≤—ã –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
                </p>
            </div>
        </body>
        </html>
        """
        
        return await EmailService.send_email([email], subject, text_body, html_body)
    
    @staticmethod
    async def send_password_reset_email(email: str, token: str, user_name: str) -> bool:
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ email –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
        """
        reset_url = f"{settings.FRONTEND_URL}/reset-password?token={token}"
        
        subject = "–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è"
        
        text_body = f"""
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_name}!

–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è. –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:
{reset_url}

–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞.

–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Salesforce Clone
        """
        
        html_body = f"""
        <html>
        <body>
            <div style="max-width: 600px; margin: 0 auto; font-family: Arial, sans-serif;">
                <h2 style="color: #333;">–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è</h2>
                <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <strong>{user_name}</strong>!</p>
                <p>–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è. –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É:</p>
                <div style="text-align: center; margin: 30px 0;">
                    <a href="{reset_url}" 
                       style="background-color: #DC2626; color: white; padding: 12px 24px; 
                              text-decoration: none; border-radius: 6px; display: inline-block;">
                        –°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å
                    </a>
                </div>
                <p style="color: #666; font-size: 14px;">
                    –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:<br>
                    <a href="{reset_url}">{reset_url}</a>
                </p>
                <p style="color: #f59e0b; font-size: 14px;">
                    ‚ö†Ô∏è –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞.
                </p>
                <hr style="margin: 30px 0; border: none; border-top: 1px solid #eee;">
                <p style="color: #999; font-size: 12px;">
                    –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
                </p>
            </div>
        </body>
        </html>
        """
        
        return await EmailService.send_email([email], subject, text_body, html_body)
    
    @staticmethod
    async def send_welcome_email(email: str, user_name: str, tenant_name: str) -> bool:
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ email
        """
        subject = f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {tenant_name}!"
        
        text_body = f"""
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_name}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CRM —Å–∏—Å—Ç–µ–º—É {tenant_name}!

–í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:
- –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
- –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–¥–µ–ª–∫–∏
- –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–¥–∞–∂–∏
- –†–∞–±–æ—Ç–∞—Ç—å —Å –∫–æ–º–ø–∞–Ω–∏—è–º–∏

–ù–∞—á–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É: {settings.FRONTEND_URL}/dashboard

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Salesforce Clone
        """
        
        html_body = f"""
        <html>
        <body>
            <div style="max-width: 600px; margin: 0 auto; font-family: Arial, sans-serif;">
                <h2 style="color: #10B981;">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {tenant_name}!</h2>
                <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <strong>{user_name}</strong>!</p>
                <p>–í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:</p>
                <ul style="color: #374151; line-height: 1.6;">
                    <li>üë• –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏</li>
                    <li>üíº –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–¥–µ–ª–∫–∏</li>
                    <li>üìä –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–¥–∞–∂–∏</li>
                    <li>üè¢ –†–∞–±–æ—Ç–∞—Ç—å —Å –∫–æ–º–ø–∞–Ω–∏—è–º–∏</li>
                </ul>
                <div style="text-align: center; margin: 30px 0;">
                    <a href="{settings.FRONTEND_URL}/dashboard" 
                       style="background-color: #10B981; color: white; padding: 12px 24px; 
                              text-decoration: none; border-radius: 6px; display: inline-block;">
                        –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
                    </a>
                </div>
                <hr style="margin: 30px 0; border: none; border-top: 1px solid #eee;">
                <p style="color: #999; font-size: 12px;">
                    –° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>
                    –ö–æ–º–∞–Ω–¥–∞ Salesforce Clone
                </p>
            </div>
        </body>
        </html>
        """
        
        return await EmailService.send_email([email], subject, text_body, html_body)
    
    @staticmethod
    async def send_notification_email(
        email: str, 
        user_name: str, 
        notification_type: str,
        title: str,
        message: str,
        action_url: Optional[str] = None
    ) -> bool:
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        """
        subject = f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {title}"
        
        text_body = f"""
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_name}!

{notification_type}: {title}

{message}

{f'–ü–æ–¥—Ä–æ–±–Ω–µ–µ: {action_url}' if action_url else ''}

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Salesforce Clone
        """
        
        html_body = f"""
        <html>
        <body>
            <div style="max-width: 600px; margin: 0 auto; font-family: Arial, sans-serif;">
                <h2 style="color: #333;">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</h2>
                <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <strong>{user_name}</strong>!</p>
                <div style="background-color: #F3F4F6; padding: 16px; border-radius: 8px; margin: 20px 0;">
                    <h3 style="margin: 0 0 8px 0; color: #1F2937;">{notification_type}</h3>
                    <h4 style="margin: 0 0 8px 0; color: #4B5563;">{title}</h4>
                    <p style="margin: 0; color: #6B7280;">{message}</p>
                </div>
                {f'''
                <div style="text-align: center; margin: 20px 0;">
                    <a href="{action_url}" 
                       style="background-color: #3B82F6; color: white; padding: 10px 20px; 
                              text-decoration: none; border-radius: 6px; display: inline-block;">
                        –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </a>
                </div>
                ''' if action_url else ''}
                <hr style="margin: 30px 0; border: none; border-top: 1px solid #eee;">
                <p style="color: #999; font-size: 12px;">
                    –° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>
                    –ö–æ–º–∞–Ω–¥–∞ Salesforce Clone
                </p>
            </div>
        </body>
        </html>
        """
        
        return await EmailService.send_email([email], subject, text_body, html_body)
    @staticmethod
    async def send_opportunity_notification(
        recipient_email: str, 
        opportunity_name: str,
        stage: str,
        amount: float,
        user_name: str,
        action: str = "created",
        old_stage: str = None
    ):
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–¥–µ–ª–∫–µ
        """
        if action == "created":
            subject = f"–ù–æ–≤–∞—è —Å–¥–µ–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: {opportunity_name}"
            action_text = "—Å–æ–∑–¥–∞–Ω–∞"
        elif action == "stage_changed":
            subject = f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞–¥–∏–∏ —Å–¥–µ–ª–∫–∏: {opportunity_name}"
            action_text = f"–∏–∑–º–µ–Ω–µ–Ω–∞ —Å—Ç–∞–¥–∏—è —Å '{old_stage}' –Ω–∞ '{stage}'"
        else:
            subject = f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏: {opportunity_name}"
            action_text = "–æ–±–Ω–æ–≤–ª–µ–Ω–∞"
        
        formatted_amount = f"${amount:,.2f}" if amount else "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
        
        html_content = f"""
        <html>
        <head>
            <style>
                body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
                .header {{ background: #28a745; color: white; padding: 20px; text-align: center; }}
                .content {{ padding: 20px; background: #f9f9f9; }}
                .opportunity-details {{ background: white; padding: 15px; border-radius: 5px; margin: 20px 0; }}
                .footer {{ padding: 20px; text-align: center; color: #666; font-size: 12px; }}
                .button {{ display: inline-block; padding: 12px 24px; background: #28a745; color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }}
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>ü§ù –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–¥–µ–ª–∫–µ</h1>
                </div>
                <div class="content">
                    <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_name}\!</p>
                    <p>–°–¥–µ–ª–∫–∞ <strong>"{opportunity_name}"</strong> –±—ã–ª–∞ {action_text}.</p>
                    
                    <div class="opportunity-details">
                        <h3>–î–µ—Ç–∞–ª–∏ —Å–¥–µ–ª–∫–∏:</h3>
                        <p><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> {opportunity_name}</p>
                        <p><strong>–¢–µ–∫—É—â–∞—è —Å—Ç–∞–¥–∏—è:</strong> {stage}</p>
                        <p><strong>–°—É–º–º–∞:</strong> {formatted_amount}</p>
                        <p><strong>–î–∞—Ç–∞:</strong> {EmailService._get_current_datetime()}</p>
                    </div>
                    
                    <p>–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–¥–µ–ª–∫–µ, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ CRM —Å–∏—Å—Ç–µ–º—É:</p>
                    <a href="http://localhost:3000/opportunities" class="button">
                        –û—Ç–∫—Ä—ã—Ç—å —Å–¥–µ–ª–∫–∏
                    </a>
                </div>
                <div class="footer">
                    <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>CRM —Å–∏—Å—Ç–µ–º–∞</p>
                </div>
            </div>
        </body>
        </html>
        """
        
        text_content = f"""
        –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_name}\!
        
        –°–¥–µ–ª–∫–∞ "{opportunity_name}" –±—ã–ª–∞ {action_text}.
        
        –î–µ—Ç–∞–ª–∏ —Å–¥–µ–ª–∫–∏:
        - –ù–∞–∑–≤–∞–Ω–∏–µ: {opportunity_name}
        - –¢–µ–∫—É—â–∞—è —Å—Ç–∞–¥–∏—è: {stage}
        - –°—É–º–º–∞: {formatted_amount}
        - –î–∞—Ç–∞: {EmailService._get_current_datetime()}
        
        –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ:
        http://localhost:3000/opportunities
        
        –° —É–≤–∞–∂–µ–Ω–∏–µ–º,
        CRM —Å–∏—Å—Ç–µ–º–∞
        """
        
        await EmailService.send_email(
            [recipient_email],
            subject,
            text_content,
            html_content
        )

    @staticmethod
    def _get_current_datetime():
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ —á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
        from datetime import datetime
        return datetime.now().strftime("%d.%m.%Y %H:%M")
